/*
 * Jitsi, the OpenSource Java VoIP and Instant Messaging client.
 *
 * Distributable under LGPL license.
 * See terms of license at gnu.org.
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice */

#ifndef _Included_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
#define _Included_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
 * Method:    open
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice_open
  (JNIEnv *, jobject, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
 * Method:    close
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice_close
  (JNIEnv *, jobject, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
 * Method:    getName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice_getName
  (JNIEnv *, jobject, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
 * Method:    setFormat
 * Signature: (JLnet/java/sip/communicator/impl/neomedia/directshow/DSFormat;)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice_setFormat
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
 * Method:    getFormat
 * Signature: (J)Lnet/java/sip/communicator/impl/neomedia/directshow/DSFormat;
 */
JNIEXPORT jobject JNICALL Java_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice_getFormat
  (JNIEnv *, jobject, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
 * Method:    getSupportedFormats
 * Signature: (J)[Lnet/java/sip/communicator/impl/neomedia/directshow/DSFormat;
 */
JNIEXPORT jobjectArray JNICALL Java_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice_getSupportedFormats
  (JNIEnv *, jobject, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
 * Method:    setDelegate
 * Signature: (JLnet/java/sip/communicator/impl/neomedia/directshow/DSCaptureDevice/GrabberDelegate;)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice_setDelegate
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice
 * Method:    getBytes
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_directshow_DSCaptureDevice_getBytes
  (JNIEnv *, jclass, jlong, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
