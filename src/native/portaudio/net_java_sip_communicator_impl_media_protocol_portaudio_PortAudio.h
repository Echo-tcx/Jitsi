/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio */

#ifndef _Included_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
#define _Included_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_CloseStream
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1CloseStream
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_WriteStream
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1WriteStream
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_ReadStream
 * Signature: (J[BJ)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1ReadStream
  (JNIEnv *, jclass, jlong, jbyteArray, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_GetStreamReadAvailable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1GetStreamReadAvailable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_GetStreamWriteAvailable
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1GetStreamWriteAvailable
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_GetSampleSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1GetSampleSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_IsFormatSupported
 * Signature: (JJD)Z
 */
JNIEXPORT jboolean JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1IsFormatSupported
  (JNIEnv *, jclass, jlong, jlong, jdouble);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_GetDeviceCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1GetDeviceCount
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_GetDeviceInfo
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1GetDeviceInfo
  (JNIEnv *, jclass, jint);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_Initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1Initialize
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_OpenStream
 * Signature: (JJDJJLnet/java/sip/communicator/impl/media/protocol/portaudio/PortAudioStreamCallback;)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1OpenStream
  (JNIEnv *, jclass, jlong, jlong, jdouble, jlong, jlong, jobject);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_StartStream
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1StartStream
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    Pa_StopStream
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_Pa_1StopStream
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    PaDeviceInfo_getMaxInputChannels
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_PaDeviceInfo_1getMaxInputChannels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    PaDeviceInfo_getMaxOutputChannels
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_PaDeviceInfo_1getMaxOutputChannels
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    PaDeviceInfo_getName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_PaDeviceInfo_1getName
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    PaDeviceInfo_getDefaultSampleRate
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_PaDeviceInfo_1getDefaultSampleRate
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio
 * Method:    PaStreamParameters_new
 * Signature: (IIJ)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_media_protocol_portaudio_PortAudio_PaStreamParameters_1new
  (JNIEnv *, jclass, jint, jint, jlong);

#ifdef __cplusplus
}
#endif
#endif
