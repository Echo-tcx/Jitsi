Index: pa_linux_alsa.c
===================================================================
--- pa_linux_alsa.c	(revision 1418)
+++ pa_linux_alsa.c	(working copy)
@@ -315,7 +315,10 @@
     }
 
     PaUtil_FreeMemory( alsaHostApi );
-    snd_config_update_free_global();
+// damencho, removed fo compability with pulseaudio versions before 0.9.16
+// segfault application:
+// bugtrack alsa: 0002124: snd_config_update_free_global kills applications using user space alsa plugins
+//    snd_config_update_free_global();
 }
 
 /** Determine max channels and default latencies.
@@ -1364,7 +1367,7 @@
         
     ENSURE_( snd_pcm_sw_params_set_avail_min( self->pcm, swParams, self->framesPerBuffer ), paUnanticipatedHostError );
     ENSURE_( snd_pcm_sw_params_set_xfer_align( self->pcm, swParams, 1 ), paUnanticipatedHostError );
-    ENSURE_( snd_pcm_sw_params_set_tstamp_mode( self->pcm, swParams, SND_PCM_TSTAMP_ENABLE ), paUnanticipatedHostError );
+    ENSURE_( snd_pcm_sw_params_set_tstamp_mode( self->pcm, swParams, SND_PCM_TSTAMP_MMAP ), paUnanticipatedHostError );
 
     /* Set the parameters! */
     ENSURE_( snd_pcm_sw_params( self->pcm, swParams ), paUnanticipatedHostError );
@@ -2788,6 +2807,13 @@
 
         *shouldPoll = 0;
     }
+    else
+    {
+        // not actually used
+        unsigned long framesAvail = 0;
+        // now check for xrun
+        PaAlsaStreamComponent_GetAvailableFrames(self, &framesAvail, xrun );
+    }
 
 error:
     return result;
