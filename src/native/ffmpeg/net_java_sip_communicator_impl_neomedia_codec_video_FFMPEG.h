/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG */

#ifndef _Included_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
#define _Included_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
#ifdef __cplusplus
extern "C" {
#endif
#undef net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_CODEC_FLAG_LOOP_FILTER
#define net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_CODEC_FLAG_LOOP_FILTER 2048L
#undef net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_CODEC_ID_H264
#define net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_CODEC_ID_H264 28L
#undef net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_FF_BUG_AUTODETECT
#define net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_FF_BUG_AUTODETECT 1L
#undef net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_FF_CMP_CHROMA
#define net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_FF_CMP_CHROMA 256L
#undef net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_FF_INPUT_BUFFER_PADDING_SIZE
#define net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_FF_INPUT_BUFFER_PADDING_SIZE 8L
#undef net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_FF_MB_DECISION_SIMPLE
#define net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_FF_MB_DECISION_SIMPLE 0L
/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    getRGB32Format
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_getRGB32Format
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    getYUV420PFormat
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_getYUV420PFormat
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    av_free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_av_1free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    av_malloc
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_av_1malloc
  (JNIEnv *, jclass, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    av_register_all
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_av_1register_1all
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_alloc_context
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1alloc_1context
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_alloc_frame
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1alloc_1frame
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_close
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1close
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_decode_video
 * Signature: (JJ[Z[BI)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1decode_1video
  (JNIEnv *, jclass, jlong, jlong, jbooleanArray, jbyteArray, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_encode_video
 * Signature: (J[BIJ)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1encode_1video
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_find_decoder
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1find_1decoder
  (JNIEnv *, jclass, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_find_encoder
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1find_1encoder
  (JNIEnv *, jclass, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1init
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodec_open
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodec_1open
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_add_flags
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1add_1flags
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_add_partitions
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1add_1partitions
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_get_height
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1get_1height
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_get_pix_fmt
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1get_1pix_1fmt
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_get_width
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1get_1width
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_bit_rate
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1bit_1rate
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_bit_rate_tolerance
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1bit_1rate_1tolerance
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_crf
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1crf
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_gop_size
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1gop_1size
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_i_quant_factor
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1i_1quant_1factor
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_mb_decision
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1mb_1decision
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_me_cmp
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1me_1cmp
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_me_method
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1me_1method
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_me_range
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1me_1range
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_me_subpel_quality
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1me_1subpel_1quality
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_pix_fmt
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1pix_1fmt
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_qcompress
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1qcompress
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_quantizer
 * Signature: (JIII)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1quantizer
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_rc_buffer_size
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1rc_1buffer_1size
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_rc_eq
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1rc_1eq
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_rc_max_rate
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1rc_1max_1rate
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_sample_aspect_ratio
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1sample_1aspect_1ratio
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_scenechange_threshold
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1scenechange_1threshold
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_size
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1size
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_thread_count
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1thread_1count
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_time_base
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1time_1base
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avcodeccontext_set_workaround_bugs
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avcodeccontext_1set_1workaround_1bugs
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avframe_set_data
 * Signature: (JJJJ)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avframe_1set_1data
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avframe_set_key_frame
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avframe_1set_1key_1frame
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avframe_set_linesize
 * Signature: (JIII)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avframe_1set_1linesize
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avpicture_fill
 * Signature: (JJIII)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avpicture_1fill
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avpicture_get_data0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avpicture_1get_1data0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    avpicture_get_size
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_avpicture_1get_1size
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    img_convert
 * Signature: (JIJIII)I
 */
JNIEXPORT jint JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_img_1convert
  (JNIEnv *, jclass, jlong, jint, jlong, jint, jint, jint);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    memcpy
 * Signature: ([IIIJ)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_memcpy___3IIIJ
  (JNIEnv *, jclass, jintArray, jint, jint, jlong);

/*
 * Class:     net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG
 * Method:    memcpy
 * Signature: (J[BII)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_neomedia_codec_video_FFMPEG_memcpy__J_3BII
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
