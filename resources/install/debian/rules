#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# Build
JAVA_HOME_DIRS=/usr/lib/j2sdk1.5-sun /usr/lib/j2sdk1.4-sun
export JAVA_HOME ?= $(shell for j in $(JAVA_HOME_DIRS); do [ -d "$$j" ] && echo $$j && exit 0; done)
export JAVA=$(JAVA_HOME)/bin/java
export JAVAC=$(JAVA_HOME)/bin/javac
export JAR=$(JAVA_HOME)/bin/jar
export ANT=ant
# this only compile with sun javac and jar at the moment

export BASEDIR=../..

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.

	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	#-$(ANT) -file $(BASEDIR)/build.xml rebuild

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	#-$(ANT) -file $(BASEDIR)/build.xml clean

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/sip-communicator.
	cp debian/sc-logo-32x32.xpm debian/sip-communicator/usr/share/pixmaps/sip-communicator.xpm
	cp debian/sip-communicator.desktop debian/sip-communicator/usr/share/applications/
	cp $(BASEDIR)/lib/*.jar debian/sip-communicator/usr/share/sip-communicator/lib
	cp $(BASEDIR)/lib/*.properties debian/sip-communicator/usr/share/sip-communicator/lib
	cp -r $(BASEDIR)/lib/native debian/sip-communicator/usr/share/sip-communicator/lib
	cp $(BASEDIR)/lib/bundle/shell.jar debian/sip-communicator/usr/share/sip-communicator/lib/bundle/shell.jar
	cp $(BASEDIR)/lib/bundle/bundlerepository.jar debian/sip-communicator/usr/share/sip-communicator/lib/bundle/bundlerepository.jar
	cp $(BASEDIR)/lib/bundle/servicebinder.jar debian/sip-communicator/usr/share/sip-communicator/lib/bundle/servicebinder.jar
	cp $(BASEDIR)/lib/bundle/tablelayout.jar debian/sip-communicator/usr/share/sip-communicator/lib/bundle/tablelayout.jar
	cp -r $(BASEDIR)/sc-bundles debian/sip-communicator/usr/share/sip-communicator
	install -m 755 debian/sip-communicator.sh debian/sip-communicator/usr/bin/sip-communicator

	# Remove all slicks
	rm debian/sip-communicator/usr/share/sip-communicator/sc-bundles/*-slick.jar

	# Don't include libs already in debian
	rm debian/sip-communicator/usr/share/sip-communicator/lib/bcprov-jdk14-130.jar
	rm debian/sip-communicator/usr/share/sip-communicator/lib/log4j-1.2.8.jar

	# Make oscar deploy its bundles in /tmp
	sed -i -e "s/oscar.cache.profiledir=sip-communicator.bin/oscar.cache.profiledir=\/tmp\/sip-communicator.bin/" debian/sip-communicator/usr/share/sip-communicator/lib/oscar.client.run.properties
	sed -i -e "s/oscar.cache.profiledir=sip-communicator.bin/oscar.cache.profiledir=\/tmp\/sip-communicator.bin/" debian/sip-communicator/usr/share/sip-communicator/lib/oscar.unit.test.properties


# Build i386 files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
#	dh_install
	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman debian/sip-communicator.1
	dh_link
	dh_compress
	dh_fixperms
	dh_strip
#	dh_perl
#	dh_makeshlibs
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-arch
.PHONY: build clean binary-arch binary install configure
